name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


jobs:
  # Check that there are no syntax errors in the project
  php-linter:
    name: PHP Syntax check 5.6|7.2|7.3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: PHP syntax checker 5.6
        uses: prestashop/github-action-php-lint/5.6@master

      - name: PHP syntax checker 7.2
        uses: prestashop/github-action-php-lint/7.2@master

      - name: PHP syntax checker 7.3
        uses: prestashop/github-action-php-lint/7.3@master

  # Check that the PHP code follows the coding standards
  php-cs-fixer:
    name: PHP-CS-Fixer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Run PHP-CS-Fixer
        uses: prestashopcorp/github-action-php-cs-fixer@master

  # Run PHPStan against the module and a PrestaShop release
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        presta-versions: ['1.7.0.3', 'latest']
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'

      - run: composer install

      # Docker images prestashop/prestashop may be used, even if the shop remains uninstalled
      - name: Pull PrestaShop files (Tag ${{ matrix.presta-versions }})
        run: docker run -tid --rm -v ps-volume:/var/www/html --name temp-ps prestashop/prestashop:${{ matrix.presta-versions }}

      # Run a container for PHPStan, having access to the module content and PrestaShop sources.
      # This tool is outside the composer.json because of the compatibility with PHP 5.6
      - name : Run PHPStan
        run: docker run --rm --volumes-from temp-ps -v $PWD:/web/module -e _PS_ROOT_DIR_=/var/www/html --workdir=/web/module phpstan/phpstan:0.12 analyse --configuration=/web/module/tests/phpstan/phpstan.neon

  header-stamp:
    name: Check license headers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'

      - run: composer install

      - name: Run Header Stamp in Dry Run mode
        run: php vendor/bin/header-stamp --license=vendor/prestashop/header-stamp/assets/afl.txt --exclude=vendor,tests,_dev --dry-run

  deploy:
    name: build dependencies & create artifact
    runs-on: ubuntu-latest
    needs:
      - php-linter
      - php-cs-fixer
      - phpstan
      - header-stamp
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      # Optional step compiling JS files
      - name: Build JS dependencies
        uses: PrestaShopCorp/github-action-build-js/12@v1.0
        with:
          cmd: yarn
          path: ./_dev

      # Install PHP dependencies (Production ONLY)
      - name: Install composer dependencies
        run: composer install --no-dev -o

      # Remove development files
      - name: Clean-up project
        uses: PrestaShopCorp/github-action-clean-before-deploy@v1.0

      # Zip files and upload to artifacts list
      - name: Create & upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ github.event.repository.name }}
          path: ../
